name: Sky Music Converter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.13]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libsndfile1
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy>=1.26.4 scipy>=1.14.0 librosa>=0.10.2
        pip install yt-dlp>=2024.8.6 flask>=3.0.0 flask-cors>=4.0.0
        pip install soundfile>=0.12.1 pydub>=0.25.1
    
    - name: Test imports
      run: |
        python -c "import numpy, scipy, librosa, yt_dlp, flask, soundfile"
        echo "‚úÖ All dependencies imported successfully"
    
    - name: Test script syntax
      run: |
        python -m py_compile sky_music_converter_v2.py
        echo "‚úÖ Script syntax is valid"

  compatibility:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libsndfile1
    
    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install ffmpeg libsndfile
    
    - name: Install system dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # FFmpeg will be installed via yt-dlp
        echo "Windows dependencies handled by pip packages"
    
    - name: Test dependency installation
      run: |
        python -c "
        import subprocess, sys
        def install_package(package):
            subprocess.check_call([sys.executable, '-m', 'pip', 'install', package])
        
        packages = [
            'numpy>=1.26.4',
            'scipy>=1.14.0', 
            'librosa>=0.10.2',
            'yt-dlp>=2024.8.6',
            'flask>=3.0.0'
        ]
        
        for package in packages:
            try:
                install_package(package)
                print(f'‚úÖ {package} installed successfully')
            except Exception as e:
                print(f'‚ùå Failed to install {package}: {e}')
                sys.exit(1)
        "
    
    - name: Test script compatibility
      run: |
        python -c "
        print('Testing Sky Music Converter compatibility...')
        
        # Test basic imports
        try:
            import numpy as np
            import librosa
            import yt_dlp
            from flask import Flask
            print('‚úÖ All imports successful')
        except ImportError as e:
            print(f'‚ùå Import failed: {e}')
            exit(1)
        
        # Test numpy compatibility
        try:
            arr = np.array([1, 2, 3])
            print(f'‚úÖ NumPy version: {np.__version__}')
        except Exception as e:
            print(f'‚ùå NumPy test failed: {e}')
            exit(1)
        
        # Test librosa compatibility  
        try:
            sr = 22050
            print(f'‚úÖ Librosa version: {librosa.__version__}')
        except Exception as e:
            print(f'‚ùå Librosa test failed: {e}')
            exit(1)
        
        print('üéâ All compatibility tests passed!')
        "
